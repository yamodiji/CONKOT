plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    namespace 'com.speedrawer.conkot'
    compileSdk rootProject.ext.compile_sdk

    defaultConfig {
        applicationId "com.speedrawer.conkot"
        minSdk rootProject.ext.min_sdk
        targetSdk rootProject.ext.target_sdk
        versionCode rootProject.ext.version_code
        versionName rootProject.ext.version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Vector drawables support for older API levels
        vectorDrawables.useSupportLibrary = true
        
        // Disable unused features to reduce size
        resConfigs "en"
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
        
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // Additional size optimizations
            ndk {
                // Only include necessary architectures
                abiFilters 'arm64-v8a', 'armeabi-v7a'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += [
            '-opt-in=kotlin.RequiresOptIn',
            '-Xjvm-default=all'
        ]
    }

    buildFeatures {
        viewBinding true
        dataBinding false  // Disabled to reduce size
        compose false      // Disabled to reduce size
    }

    packaging {
        resources {
            excludes += [
                '/META-INF/{AL2.0,LGPL2.1}',
                '/META-INF/DEPENDENCIES',
                '/META-INF/LICENSE',
                '/META-INF/LICENSE.txt',
                '/META-INF/license.txt',
                '/META-INF/NOTICE',
                '/META-INF/NOTICE.txt',
                '/META-INF/notice.txt',
                '/META-INF/ASL2.0',
                '/META-INF/*.kotlin_module'
            ]
        }
    }

    // Optimize APK size
    bundle {
        language {
            enableSplit = false  // Keep single APK for simplicity
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = false
        }
    }
}

dependencies {
    // Core Android libraries (minimal set)
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    
    // Lifecycle components (lightweight MVVM)
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    
    // RecyclerView for app list
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    
    // SwipeRefreshLayout for pull-to-refresh
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    
    // Coroutines for async operations
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    
    // Room database (optional, can use SharedPreferences for minimal size)
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation 'androidx.room:room-ktx:2.6.1'
    kapt 'androidx.room:room-compiler:2.6.1'
    
    // Preferences
    implementation 'androidx.preference:preference-ktx:1.2.1'
    
    // Testing dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
} 